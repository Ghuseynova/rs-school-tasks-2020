@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
	line-height: 1.15;
	/* 1 */
	-webkit-text-size-adjust: 100%;
	/* 2 */
}

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
	margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
	display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
	font-size: 2em;
	margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
	-webkit-box-sizing: content-box;
	box-sizing: content-box;
	/* 1 */
	height: 0;
	/* 1 */
	overflow: visible;
	/* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
	font-family: monospace, monospace;
	/* 1 */
	font-size: 1em;
	/* 2 */
}

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
	background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
	border-bottom: none;
	/* 1 */
	text-decoration: underline;
	/* 2 */
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
	/* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
	font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
	font-family: monospace, monospace;
	/* 1 */
	font-size: 1em;
	/* 2 */
}

/**
   * Add the correct font size in all browsers.
   */
small {
	font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
	border-style: none;
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	/* 1 */
	font-size: 100%;
	/* 1 */
	line-height: 1.15;
	/* 1 */
	margin: 0;
	/* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
	/* 1 */
	overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
	/* 1 */
	text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */
fieldset {
	padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	/* 1 */
	color: inherit;
	/* 2 */
	display: table;
	/* 1 */
	max-width: 100%;
	/* 1 */
	padding: 0;
	/* 3 */
	white-space: normal;
	/* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
	vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
	overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type='checkbox'],
[type='radio'] {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	/* 1 */
	padding: 0;
	/* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
	height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type='search'] {
	-webkit-appearance: textfield;
	/* 1 */
	outline-offset: -2px;
	/* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type='search']::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
	-webkit-appearance: button;
	/* 1 */
	font: inherit;
	/* 2 */
}

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
	display: block;
}

/*
   * Add the correct display in all browsers.
   */
summary {
	display: list-item;
}

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
	display: none;
}

/**
   * Add the correct display in IE 10.
   */
[hidden] {
	display: none;
}

@font-face {
	font-family: 'Georgia';
	src: url('../fonts/Georgia.woff2') format('woff2'),
		url('../fonts/Georgia.woff') format('woff'),
		url('../fonts/Georgia.ttf') format('truetype');
	font-weight: normal;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Arial';
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src: url('../fonts/ArialMT.woff2') format('woff2'),
		url('../fonts/ArialMT.woff') format('woff'),
		url('../fonts/ArialMT.ttf') format('truetype');
}

@font-face {
	font-family: 'Arial';
	font-style: italic;
	font-weight: 400;
	font-display: swap;
	src: url('../fonts/Arial-ItalicMT.woff2') format('woff2'),
		url('../fonts/Arial-ItalicMT.woff') format('woff'),
		url('../fonts/Arial-ItalicMT.ttf') format('truetype');
}

/** Basic styles **/
html {
	font-size: 62.5%;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}

body {
	font-family: 'Georgia', 'Arial', sans-serif;
	font-style: normal;
	font-weight: 400;
	color: #000;
}

*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	-webkit-box-sizing: inherit;
	box-sizing: inherit;
}

.page {
	position: relative;
	width: 100%;
	overflow-x: hidden;
}

.container {
	width: 100%;
	max-width: 1280px;
	margin: 0 auto;
	padding: 0 40px;
}

img {
	max-width: 100%;
	height: auto;
}

h1,
h2,
h3 {
	margin: 0;
	padding: 0;
	font-family: Georgia;
	font-style: normal;
	font-weight: normal;
}

ul,
ol {
	margin: 0;
	padding: 0;
	list-style: none;
}

input,
textarea,
button,
select,
a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

h2--lg,
.h2--lg {
	font-size: 4.4rem;
	line-height: 5.7rem;
}

h2--white,
.h2--white {
	color: #fff;
}

.text {
	font-family: Arial;
	font-style: normal;
	font-weight: normal;
	font-size: 1.5rem;
	line-height: 2.4rem;
}
.text--gray {
	color: #cdcdcd;
}

.btn {
	display: inline-block;
	padding: 1.5rem 4.5rem;
	border: none;
	border-radius: 100px;
	-webkit-transition: background 0.4s;
	transition: background 0.4s;
	cursor: pointer;
}
.btn:focus {
	outline: none;
}
.btn:hover {
	background: #fddcc4;
}
.btn--creamy {
	background: #f1cdb3;
}
.btn__text {
	color: #292929;
	font-family: Georgia;
	font-size: 1.7rem;
	line-height: 2.2rem;
	letter-spacing: 0.1rem;
}

.header {
	top: 0;
	right: 0;
	left: 0;
	height: 120px;
}
.header--transparent {
	position: absolute;
	padding-top: 60px;
	background-color: transparent;
}
.header__inner {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.header__logo {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
}
.header__logo-title {
	color: #f1cdb3;
	font-weight: normal;
	font-size: 3.2rem;
	line-height: 3.5rem;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	letter-spacing: 0.18rem;
}
.header__logo-subtitle {
	display: inline-block;
	margin-top: 1rem;
	color: #fff;
	font-family: Arial;
	font-style: normal;
	font-weight: normal;
	font-size: 1.3rem;
	line-height: 1.5rem;
	letter-spacing: 0.15rem;
}
.header__nav {
	padding: 1.6rem 0 2rem;
}

.nav--dark .nav__link {
	color: #545454;
}
.nav--dark .nav__link:hover {
	color: #292929;
}

.nav__menu {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}

.nav__item {
	margin-right: 3.5rem;
}
.nav__item:last-child {
	margin-right: 0;
}

.nav__link {
	display: inline-block;
	color: #cdcdcd;
	font-family: Arial;
	font-style: normal;
	font-weight: normal;
	font-size: 1.5rem;
	line-height: 2.4rem;
	text-decoration: none;
	-webkit-transition: color 0.4s, border 0.4s;
	transition: color 0.4s, border 0.4s;
}
.nav__link--active {
	color: #fafafa;
	border-bottom: 3px solid #f1cdb3;
	pointer-events: none;
}
.nav__link:hover {
	color: #fafafa;
}

.welcome {
	padding-top: 120px;
	background: url(assets/images/start-screen-background.png) no-repeat top left;
	background-size: cover;
}
.welcome__inner {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: end;
	-ms-flex-align: end;
	align-items: flex-end;
}
.welcome__text {
	-webkit-box-flex: 0;
	-ms-flex: 0 1 38.3%;
	flex: 0 1 38.3%;
	padding: 22.3rem 0 24.3rem;
}
.welcome__text .h2 {
	max-width: 31rem;
}
.welcome__text .text {
	margin: 4.2rem 0;
}
.welcome__img {
	position: relative;
	-webkit-box-flex: 1;
	-ms-flex: auto;
	flex: auto;
	margin-left: 3.5%;
	padding-bottom: 60.8%;
}
.welcome__img-file {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
